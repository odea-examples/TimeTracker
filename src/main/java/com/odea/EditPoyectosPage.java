//TODO: mejor hacerlo de a poco y despues irle agregando funcionalidades como las listchoices
//TODO: no se porque el texto se hizo todo mayuscula



//PACKAGE COM.ODEA;
//
//IMPORT JAVA.UTIL.LIST;
//
//IMPORT ORG.APACHE.WICKET.AJAX.AJAXREQUESTTARGET;
//IMPORT ORG.APACHE.WICKET.MARKUP.HTML.FORM.FORM;
//IMPORT ORG.APACHE.WICKET.MARKUP.HTML.FORM.LISTMULTIPLECHOICE;
//IMPORT ORG.APACHE.WICKET.MARKUP.HTML.FORM.REQUIREDTEXTFIELD;
//IMPORT ORG.APACHE.WICKET.MARKUP.HTML.PANEL.FEEDBACKPANEL;
//IMPORT ORG.APACHE.WICKET.MODEL.COMPOUNDPROPERTYMODEL;
//IMPORT ORG.APACHE.WICKET.MODEL.IMODEL;
//IMPORT ORG.APACHE.WICKET.MODEL.LOADABLEDETACHABLEMODEL;
//IMPORT ORG.APACHE.WICKET.MODEL.PROPERTYMODEL;
//IMPORT ORG.APACHE.WICKET.REQUEST.MAPPER.PARAMETER.PAGEPARAMETERS;
//IMPORT ORG.APACHE.WICKET.SPRING.INJECTION.ANNOT.SPRINGBEAN;
//IMPORT ORG.SPRINGFRAMEWORK.JDBC.OBJECT.UPDATABLESQLQUERY;
//
//IMPORT COM.GOOGLECODE.WICKET.JQUERY.UI.FORM.BUTTON.AJAXBUTTON;
//IMPORT COM.ODEA.DOMAIN.PROYECTO;
//IMPORT COM.ODEA.SERVICES.DAOSERVICE;
//
//PUBLIC CLASS EDITPOYECTOSPAGE EXTENDS BASEPAGE {
//	@SPRINGBEAN
//	PRIVATE TRANSIENT DAOSERVICE DAOSERVICE;
//	PRIVATE IMODEL<PROYECTO> PROYECTOMODEL;
//	
//	PUBLIC EDITPOYECTOSPAGE(){
//        THIS.PROYECTOMODEL = NEW COMPOUNDPROPERTYMODEL<PROYECTO>(NEW LOADABLEDETACHABLEMODEL<PROYECTO>() {
//            @OVERRIDE
//            PROTECTED PROYECTO LOAD() {
//                RETURN NEW PROYECTO(0,NULL);
//            }
//        });
////        THIS.PREPAREPAGE();    
//    }
//    
//    PUBLIC EDITPOYECTOSPAGE(FINAL PAGEPARAMETERS PARAMETERS) {
//        THIS.PROYECTOMODEL = NEW COMPOUNDPROPERTYMODEL<PROYECTO>(NEW LOADABLEDETACHABLEMODEL<PROYECTO>() {
//            @OVERRIDE
//            PROTECTED PROYECTO LOAD() {
//                PROYECTO PROYECTO= NEW PROYECTO(PARAMETERS.GET("PROYECTOID").TOINT(),PARAMETERS.GET("PROYECTONOMBRE").TOSTRING());
//                RETURN PROYECTO;
//            }
//            
//            
//        });
////        THIS.PREPAREPAGE();
//    }
//    PRIVATE VOID PREPAREPAGE(){
//        ADD(NEW FEEDBACKPANEL("FEEDBACK"));
//        
//        FORM<PROYECTO> FORM = NEW FORM<PROYECTO>("FORM",PROYECTOMODEL){
//            @OVERRIDE
//            PROTECTED VOID ONSUBMIT() {
//                PROYECTO P = GETMODELOBJECT();
//                //TODO: HACER ALGUN PROYECTO UPDATE
//                SETRESPONSEPAGE(PROYECTOSPAGE.CLASS);
//            }
//        };
//        FINAL LIST SELECTEDORIGINALS;
//        FINAL LIST SELECTEDDESTINATIONS;
//        
//        FINAL LISTMULTIPLECHOICE ORIGINALS = NEW LISTMULTIPLECHOICE("ORIGINALS",
//        		  NEW PROPERTYMODEL(THIS, "SELECTEDORIGINALS"), NEW LOADABLEDETACHABLEMODEL() {
//        		      @OVERRIDE
//        		      PROTECTED OBJECT LOAD() {
//        		        RETURN DAOSERVICE.GETACTIVIDADES();
//        		      }
//        		    });
//
//        FINAL LISTMULTIPLECHOICE DESTINATIONS = NEW LISTMULTIPLECHOICE("DESTINATIONS", 
//        		  NEW PROPERTYMODEL(THIS, "SELECTEDDESTINATIONS"), NEW LOADABLEDETACHABLEMODEL() {
//       			      @OVERRIDE
//       		      PROTECTED OBJECT LOAD() {
//       			        RETURN DAOSERVICE.GETACTIVIDADES(PROYECTOMODEL.GETOBJECT());
//       		      	  }
//        		    });
//        REQUIREDTEXTFIELD<STRING> NOMBREPROYECTO = NEW REQUIREDTEXTFIELD<STRING>("NOMPRO");
//        AJAXBUTTON ADD = NEW AJAXBUTTON("ADD") {
//            @OVERRIDE
//            PROTECTED VOID ONSUBMIT(AJAXREQUESTTARGET TARGET, FORM FORM) {
//                  UPDATE(TARGET,SELECTEDORIGINALS, ORIGINALS, DESTINATIONS);
//            }
//
//			PRIVATE VOID UPDATE(AJAXREQUESTTARGET TARGET,
//					LIST SELECTEDORIGINALS, LISTMULTIPLECHOICE ORIGINALS,
//					LISTMULTIPLECHOICE DESTINATIONS) {
//				 FOR (OBJECT DESTINATION : SELECTEDORIGINALS) {
//			            LIST CHOICES = GET
//			            IF (!TO.GETCHOICES().CONTAINS(DESTINATION)) {
//			              TO.GETCHOICES().ADD(DESTINATION);
//			              CHOICES.REMOVE(DESTINATION);
//			              FROM.SETCHOICES(CHOICES);
//			            }
//			          }
//			          TARGET.ADDCOMPONENT(TO);
//			          TARGET.ADDCOMPONENT(FROM);
//				
//			}
//          };
//
//      AJAXBUTTON REMOVE = NEW AJAXBUTTON("REMOVE") {
//             @OVERRIDE
//            PROTECTED VOID ONSUBMIT(AJAXREQUESTTARGET TARGET, FORM FORM) {
//                 UPDATE(TARGET, SELECTEDDESTINATIONS, DESTINATIONS, ORIGINALS);
//            }
//          };
//
//        /**
//         * UPDATES THE SELECT BOXES.
//         * @PARAM TARGET THE {@LINK AJAXREQUESTTARGET}.
//         */
//          
//        PUBLIC VOID UPDATE(AJAXREQUESTTARGET TARGET, LIST SELECTIONS, LISTMULTIPLECHOICE FROM, LISTMULTIPLECHOICE TO) {
//          FOR (STRING DESTINATION : SELECTIONS) {
//            LIST CHOICES = GETCHOICES(FROM);
//            IF (!TO.GETCHOICES().CONTAINS(DESTINATION)) {
//              TO.GETCHOICES().ADD(DESTINATION);
//              CHOICES.REMOVE(DESTINATION);
//              FROM.SETCHOICES(CHOICES);
//            }
//          }
//          TARGET.ADDCOMPONENT(TO);
//          TARGET.ADDCOMPONENT(FROM);
//        }
//        
//        
//    }
//}
